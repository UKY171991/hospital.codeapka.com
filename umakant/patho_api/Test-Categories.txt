Test Categories API (https://hospital.codeapka.com/umakant/patho_api/test_category.php)

Overview
- JSON API for managing test categories at: /patho_api/test_category.php
- Mirrors `ajax/test_category_api.php` behavior and fields.
- Content-Type: application/json; charset=utf-8
- Session-based auth: create/update/delete require `admin` or `master` role.

Actions

1) list
- Method: GET
- Params: action=list
- Response (200):
  { "success": true, "data": [ { "id": 1, "name": "Hematology", "description": "...", "added_by": 2, "added_by_username": "admin" }, ... ] }

2) get
- Method: GET
- Params: action=get&id=<id>
- Response (200): { "success": true, "data": { "id", "name", "description", "added_by", "added_by_username", "created_at", "updated_at" } }
- 404 if not found

3) save
- Method: POST
- Params (form): action=save; id (optional); name (required); description (optional)
- Auth: session role must be `admin` or `master`
- Response: { "success": true, "message": "Category created" } or { "success": true, "message": "Category updated" }
- Errors: 400 if name empty; 401 if unauthorized; 500 on DB error

Notes:
- Upsert behavior: save uses `name` as the unique key. Creating a category that already exists will `skip` or `update` depending on whether provided fields differ.
- `added_by` is set from session user; if no session user is present the server will use `PATHO_API_DEFAULT_USER_ID` (from `inc/api_config.php`) as the `added_by` for new records when available.
- `added_by` is controlled server-side; clients cannot set it unless the requester is a master/admin and explicitly passes `added_by`.

4) delete
- Method: POST
- Params: action=delete&id=<id>
- Auth: session role must be `admin` or `master`
- Response: { "success": true, "message": "Category deleted" }

Postman / curl examples
- List categories:
  curl "https://hospital.codeapka.com/umakant/patho_api/test_category.php?action=list"

- Get category:
  curl "https://hospital.codeapka.com/umakant/patho_api/test_category.php?action=get&id=3"

- Create category (POST):
  curl -X POST "https://yourhost/patho_api/test_category.php" \
    -d "action=save" -d "name=New Cat" -d "description=Desc" \
    --cookie "PHPSESSID=<session id>"

- Update category (POST):
  curl -X POST "https://yourhost/patho_api/test_category.php" \
    -d "action=save" -d "id=3" -d "name=Updated" \
    --cookie "PHPSESSID=<session id>"

- Delete category (POST):
  curl -X POST "https://yourhost/patho_api/test_category.php" \
    -d "action=delete" -d "id=3" \
    --cookie "PHPSESSID=<session id>"

Notes
- Use a valid session cookie when testing create/update/delete in Postman.
- Endpoints return JSON error messages with appropriate HTTP status codes.

Files
- API: patho_api/test_category.php
- Docs: patho_api/Test-Categories.txt

Generated: Aug 26, 2025

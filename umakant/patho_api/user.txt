User API (https://hospital.codeapka.com/umakant/patho_api/user.php)

Overview
- Public JSON API that mirrors `ajax/user_api.php` but is exposed under `/patho_api/user.php`.
- Content-Type: application/json; charset=utf-8
- Session-based authentication (uses PHP session: `$_SESSION['user_id']`, `$_SESSION['role']`).

Supported actions (via `action` param)

1) list
- Method: GET or POST
- Description: Returns a list of users limited to role = 'user' (public-facing list).
- Request parameters: action=list
- Authentication: none required to call, but the API reads session if present.
- Response (200): { success: true, data: [ { id, username, password, full_name, email, role, added_by, is_active, created_at, last_login, expire_date, updated_at }, ... ] }
- Notes: The `password` column is returned as stored (hashed) — consumer should never display this.

2) get
- Method: GET
- Description: Returns a single user by id.
- Request parameters: action=get&id=<id>
- Authentication & Authorization:
  - Viewer role and id are read from session: `$_SESSION['role']`, `$_SESSION['user_id']`.
  - Allowed if: viewer is 'master' OR the requested user was added by the viewer (`row.added_by == viewerId`) OR the requested user is the viewer themself (`row.id == viewerId`).
- Response (200): { success: true, data: { id, username, password, full_name, email, role, added_by, is_active, created_at, last_login, expire_date, updated_at } }
- Error responses:
  - 403 Unauthorized (if viewer lacks permission)
  - 404 Not Found (if user id doesn't exist)

3) save
- Method: POST
- Description: Create or update a user.
- Request parameters (POST):
  - action=save
  - id (optional): when present, updates that user; otherwise creates a new user.
  - username (required for create)
  - password (optional for update; if empty, password not changed)
  - full_name
  - email
  - role (default 'user')
  - is_active (0 or 1)
- Authentication & Authorization:
  - Requires authenticated session (`$_SESSION['user_id']` present). No separate role check in this API; it relies on session presence.
- Behavior details:
  - On create: if password is empty, a default password 'password' is used and hashed. `added_by` set to session user id; `created_at` set to NOW().
  - On update: if `password` supplied and not empty, it is hashed and updated; otherwise password remains unchanged.
- Response (200): { success: true, message: 'User created' } or { success: true, message: 'User updated' }
- Error responses:
  - 401 Unauthorized (if not authenticated)

4) delete
- Method: POST
- Description: Deletes a user by id.
- Request parameters: action=delete&id=<id>
- Authentication & Authorization:
  - Requires session role to be 'master' (`$_SESSION['role'] === 'master'`). Otherwise returns 401 Unauthorized.
- Response (200): { success: true, message: 'User deleted' }

Common error formats
- All errors return JSON: { success: false, message: '<description>' } with HTTP status codes set (401, 403, 404, 400, 500) where applicable.

Examples
- List users:
  GET https://hospital.codeapka.com/umakant/patho_api/user.php?action=list

- Get user 5 (client must be allowed):
  GET /patho_api/user.php?action=get&id=5

- Create user:
  POST /patho_api/user.php (form-encoded)
  body: action=save&username=jdoe&password=secret&full_name=John+Doe&email=j@x.com&role=user&is_active=1

- Update user (change email only):
  POST /patho_api/user.php
  body: action=save&id=5&username=jdoe&full_name=John+Doe&email=new@x.com&role=user&is_active=1

- Delete user (master only):
  POST /patho_api/user.php
  body: action=delete&id=5

Security notes and recommendations
- The API currently returns the hashed `password` field on list/get — avoid sending this to clients or strip it server-side before returning to public consumers.
- Consider restricting `list` further or requiring authentication for listing in production.
- Ensure calls over HTTPS in production to protect credentials and session cookies.
- Consider moving role checks for `save` into the API if only admins/master should create/update users.

Contact
- File source: patho_api/user.php
- Updated: Aug 26, 2025
